% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/epi_plot_bar.R
\name{epi_plot_bar}
\alias{epi_plot_bar}
\title{Barplot wrapper function using ggplot2}
\usage{
epi_plot_bar(df = NULL, var_x = NULL, var_y = "", fill = var_x,
  bar_colour = "black", guides_fill = FALSE, y_lab = "Count",
  x_lab = var_x, condition = NULL, ...)
}
\arguments{
\item{df}{data.frame with x var to plot}

\item{var_x}{Variable to plot on x-axis, pass as a string.}

\item{var_y}{Variable to plot on y-axis, pass as a string.}

\item{fill}{Interior colour used to fill. If only passing var_x it defaults to 'black'.
If passing both var_y and var_x, it uses var_x.}

\item{bar_colour}{Aesthetics for ggplot2. Default is 'black' if only var_x.}

\item{guides_fill}{Fill for ggplot2 guides. Default is FALSE.}

\item{y_lab}{y-axis label. Default is 'Count'.}

\item{x_lab}{x-axis label. Default is x_var.}

\item{condition}{Variable name for grouped bar plots.}

\item{...}{pass further arguments to ggplot2::geom_bar()}
}
\value{
Prints a ggplot2 barplot
}
\description{
epi_plot_bar() wraps ggplot2 barplot for one or two variables with
a number of set preferences, see below.
}
\note{
For other options, save as object and build on the layers.
var_x and var_y are passed to ggplot2::aes_string.
For colour and fill see ggplot2::fill for further information.
epi_plot_bar() for one variable uses stat = 'count' and is coloured according
to the x variable passed, black borders for bars and no legend by default.
For two variables it assumes you want to colour according to the x variable
and that stat = 'identity' is what's needed. No legend by default.
stat = 'identity' uses the height of the bar to represent the value of the
passed column.
}
\examples{

\dontrun{
# Bar plots of one and two variables:
df
lapply(df, class)
# Barplot for single variable:
summary(df$var_to_rep)
epi_plot_bar(df, 'var_to_rep')
# Barplot for two variables:
epi_head_and_tail(df[, c('var_to_rep', 'y')], cols = 2)
as.tibble(df) \%>\% count(y)
as.tibble(df) \%>\% count(var_to_rep)
as.tibble(df) \%>\% group_by(var_to_rep) \%>\% count(y)
epi_plot_bar(df,
						 var_y = 'y',
						 var_x = 'z',
						 x_lab = '',
						 fill = 'var_to_rep'
						 )
}

}
\seealso{
\code{\link{epi_plot_list}},
\code{\link{epi_plots_to_grid}},
\code{\link{epi_plot_box}},
\code{\link{epi_plot_hist}},
\code{\link[ggplot2]{ggplot}},
\code{\link[ggplot2]{geom_bar}}.
}
\author{
Antonio Berlanga-Taylor <\url{https://github.com/AntonioJBT/episcout}>
}
